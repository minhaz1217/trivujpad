name: Build Docker Image
run-name: ${{ github.actor }} is Building with docker
on:
  pull:
    branches: [master]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Previous Version
        id: get-previous-version
        run: bash ./.github/workflows/scripts/previous-version.sh
      
      - name: Generate Next Version
        id: get-next-version
        run: bash ./.github/workflows/scripts/next-version.sh -p ${{steps.get-previous-version.outputs.PREVIOUS_VERSION}}
      
      - name: Create Release Tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{steps.get-next-version.outputs.NEXT_VERSION}}
          release_name: Release ${{ steps.get-next-version.outputs.NEXT_VERSION }}
          draft: false
          prerelease: false

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: minhaz1217/minhaz1217
          tags: |
            type=raw,enable=true,priority=200,prefix=trivujpad-,value=${{steps.get-next-version.outputs.NEXT_VERSION}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build the image
        uses: docker/build-push-action@v6
        id: docker-build-push
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Name of the image
        run: |
          echo Image name ${{ fromJSON(steps.docker-build-push.outputs.metadata)['image.name'] }}
        # echo Next 1
        # echo ${{steps.docker-build-push.outputs.manifest.org.opencontainers.image.version }}
        # echo Next 2
        # echo ${{ steps.docker-build-push.outputs }}
